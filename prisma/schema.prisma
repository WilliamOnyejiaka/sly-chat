generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  VENDOR
  CUSTOMER
  ADMIN
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            Int      @unique
  firstName         String
  lastName          String
  email             String
  verified          Boolean
  active            Boolean
  userType          UserType
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  profilePictureUrl String?
}

enum SenderType {
  VENDOR
  CUSTOMER
}

model Chat {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  productId          String
  vendorId           Int
  customerId         Int 
  productImageUrl    String
  productPrice       String
  productName        String
  storeLogoUrl       String
  customerProfilePic String
  customerName       String
  storeName          String
  messages           Message[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Message {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  senderId        Int
  senderType      SenderType
  text            String
  timestamp       DateTime       @default(now())
  read            Boolean        @default(false)
  recipientOnline Boolean        @default(true)
  chatId          String?        @db.ObjectId
  chat            Chat?          @relation(fields: [chatId], references: [id], onDelete: Cascade)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  messageImages   MessageImage[]
}

model MessageImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messageId String   @unique @db.ObjectId
  Message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
}
