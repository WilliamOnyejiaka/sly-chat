generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Vendor {
  id             String                 @id @default(auto()) @map("_id") @db.ObjectId
  userId         Int                    @unique
  firstName      String
  lastName       String
  email          String                 @unique
  verified       Boolean
  active         Boolean
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  profilePicture VendorProfilePicture[]
}

model VendorProfilePicture {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vendor    Vendor   @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorId  String   @db.ObjectId
}

model Customer {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  userId             Int                  @unique
  firstName          String
  lastName           String
  email              String               @unique
  verified           Boolean
  active             Boolean
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  CustomerProfilePic CustomerProfilePic[]
}

model CustomerProfilePic {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customerId String   @unique @db.ObjectId
  Customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model Chat {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  publicId        String
  productId       String
  sellerId        String
  buyerId         String
  productImageUrl String
  productPrice    String
  productName     String
  storeLogoUrl    String
  buyerImgUrl     String
  buyerName       String
  storeName       String
  messages        Message[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Message {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId        String
  senderType    String
  text            String
  timestamp       DateTime @default(now())
  read            Boolean  @default(false)
  recipientOnline Boolean  @default(true)
  chatId          String?  @db.ObjectId
  chat            Chat?    @relation(fields: [chatId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
